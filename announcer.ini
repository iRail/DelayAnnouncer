;;
;; Database configuration
;;

[database]

;; This fields describes a DBD-compatibel URI, providing the announcer with
;; a database
uri=dbi:mysql:database

;; Most databases will require you to provide some credentials
;username=
;password=

;; The following field is used to distinguish the current announcer's tables
;; from others.
prefix=foo


;;
;; Announcer configuration
;;

[announcer]

;; The 'station' field is used to look up liveboard data, and sometimes to
;; mention it in a message.
station=Ghent Sint Pieters

;; This field controls whether the announcer will check global highscores and
;; announce them. Disable this for a standalone installation. It requires the
;; database to be identical for all instances.
standalone=0


;;
;; Log configuration
;;

[log]

;; There are two types of logging: easy and enhanced.

;; The easy type just outputs to the console, with the verbosity controller
;; by the 'level' field (possibilities: error, warn, info, debug, trace)
type=easy
level=info

;; The enanced type is controller by a Log4perl configuration file.
;type=enhanced
;file=announcer_log.cfg


;;
;; Twitter publisher
;;

[twitter]

;; Enable the publisher
enabled = 0

;; The consumer keys are to be filled in before running this publisher. You
;; can register a new consumer key at <http://dev.twitter.com/apps/new>
;consumer_key=
;consumer_secret=

;; The access token allows the application to control a given account. To get
;; these, fill in the consumer keys, and launch the application. You'll get
;; to see an URL on which you can get the access token.
;access_token=
;access_token_secret=

;; The longitude and latitude are used to geo-locate the tweets. Mind though
;; you also need to enable geolocation in your account settings!
;longitude=
;latitude=

;; This field controls an URL which is suffixed to each tweet.
;suffix_url=

;; The hashtag is also suffixed.
;hashtag=


;;
;; Console publisher
;;

[console]

;; Enable the publisher
enabled = 1

